// <auto-generated />
using System;
using GameDAL_EF.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameDAL_EF.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GameDAL_EF.Entities.Favorite", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteList");
                });

            modelBuilder.Entity("GameDAL_EF.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("GameList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Best jeu de foot ever",
                            IdGenre = 1,
                            Title = "Rocket League"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Anne PC Killer",
                            IdGenre = 2,
                            Title = "Baldur's Gate"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Pour les fan de panpan",
                            IdGenre = 3,
                            Title = "CS:GO"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Best perte de temps ever",
                            IdGenre = 4,
                            Title = "World of Warcraft"
                        });
                });

            modelBuilder.Entity("GameDAL_EF.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenreList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Label = "RPG"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Meuporg"
                        },
                        new
                        {
                            Id = 4,
                            Label = "FPS"
                        });
                });

            modelBuilder.Entity("GameDAL_EF.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PwdHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("GameDAL_EF.Entities.Favorite", b =>
                {
                    b.HasOne("GameDAL_EF.Entities.Game", "FGame")
                        .WithMany("IsFavorite")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("GameDAL_EF.Entities.User", "FUser")
                        .WithMany("FavoriteGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("FGame");

                    b.Navigation("FUser");
                });

            modelBuilder.Entity("GameDAL_EF.Entities.Game", b =>
                {
                    b.HasOne("GameDAL_EF.Entities.Genre", "Genre")
                        .WithMany("GameList")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameDAL_EF.Entities.Game", b =>
                {
                    b.Navigation("IsFavorite");
                });

            modelBuilder.Entity("GameDAL_EF.Entities.Genre", b =>
                {
                    b.Navigation("GameList");
                });

            modelBuilder.Entity("GameDAL_EF.Entities.User", b =>
                {
                    b.Navigation("FavoriteGames");
                });
#pragma warning restore 612, 618
        }
    }
}
